{"version":3,"file":"static/js/671.091e89a7.chunk.js","mappings":"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","sources":["components/MovieItem/MovieItem.styled.js","components/MovieItem/MovieItem.jsx","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","components/SearchForm/SearchForm.styled.js","components/SearchForm/SearchForm.jsx","pages/SearchMovies.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Item = styled.li`\n  width: calc((100% - 10px) / 3);\n  box-shadow: 0px 0px 13px 1px #a39b9c;\n`;\n\nexport const StyledLink = styled(Link)`\n  text-decoration: none;\n`;\n\nexport const MovieTitle = styled.p`\n  height: 40px;\n  margin-bottom: 5px;\n  text-align: center;\n  color: black;\n  font-weight: 700;\n`;\n\nexport const Poster = styled.img`\n  width: 100%;\n  object-fit: cover;\n`;\n","import { useLocation } from 'react-router-dom';\nimport { Item, MovieTitle, Poster, StyledLink } from './MovieItem.styled';\n\nexport const MoviesItem = ({ movie }) => {\n  const location = useLocation();\n  //   console.log(location);\n\n  return (\n    <Item>\n      <StyledLink to={`/movies/${movie.id}`} state={{ from: location }}>\n        <MovieTitle>{movie.title}</MovieTitle>\n        <Poster\n          src={\n            movie.poster_path\n              ? `https://image.tmdb.org/t/p/w200/${movie.poster_path}`\n              : 'http://placehold.it/200x300'\n          }\n          alt={movie.title}\n        />\n      </StyledLink>\n    </Item>\n  );\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 5px;\n  list-style-type: none;\n`;\n","import { MoviesItem } from 'components/MovieItem/MovieItem';\nimport { List } from './MoviesList.styled';\n\nexport const MoviesList = ({ movies }) => {\n  return (\n    <List>\n      {movies.map(movie => {\n        return <MoviesItem key={movie.id} movie={movie} />;\n      })}\n    </List>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  margin: 20px 0;\n  display: flex;\n  gap: 10px;\n  justify-content: center;\n`;\n\nexport const Input = styled.input`\n  width: 250px;\n  padding: 3px;\n`;\n\nexport const Button = styled.button`\n  width: 100px;\n  padding: 5px;\n  background-color: darkblue;\n  color: white;\n  cursor: pointer;\n  &:hover,\n  &:focus {\n    border: 2px solid greenyellow;\n  }\n`;\n","import { useState } from 'react';\nimport { Button, Form, Input } from './SearchForm.styled';\n\nexport const SearchForm = ({ onSubmit, defaultValue }) => {\n  const [query, setQuery] = useState('');\n\n  const handleChange = event => {\n    const inputQuery = event.target.value;\n    setQuery(inputQuery);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    onSubmit(query);\n    // console.log(query);\n    // setQuery('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Input\n        defaultValue={defaultValue}\n        onChange={handleChange}\n        name=\"query\"\n        type=\"text\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search movies\"\n        required\n      />\n      <Button type=\"submit\">Search</Button>\n    </Form>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchFilmsByQuery } from 'services/api';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { SearchForm } from 'components/SearchForm/SearchForm';\nimport Loader from 'components/Loader/Loader';\n\nconst SearchMovies = () => {\n  // const [query, setQuery] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [isLoading, setIsLoading] = useState(false);\n\n  const searchQuery = searchParams.get('query');\n\n  useEffect(() => {\n    if (searchQuery === null) return;\n\n    async function fetchMovies() {\n      setIsLoading(true);\n      try {\n        const { results } = await fetchFilmsByQuery(searchQuery);\n        // console.log(results);\n\n        setMovies(results);\n      } catch (error) {\n        console.log(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n\n    fetchMovies(searchQuery);\n  }, [searchQuery]);\n\n  const handleSubmit = searchValue => {\n    setSearchParams({ query: searchValue });\n  };\n\n  return (\n    <>\n      <SearchForm onSubmit={handleSubmit} defaultValue={searchQuery} />\n      {isLoading && <Loader />}\n      {/* {searchQuery && <p>Search results for the request \"{searchQuery}\"</p>} */}\n\n      {movies.length > 0 ? (\n        <MoviesList movies={movies} />\n      ) : (\n        <p>There are no movies for your request</p>\n      )}\n    </>\n  );\n};\n\nexport default SearchMovies;\n","import axios from 'axios';\n\n// axios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '77c88a9974e8e5cf721d75ac1e275e9a';\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(\n    `${BASE_URL}trending/movie/week?api_key=${API_KEY}`\n  );\n\n  return data;\n};\n\nexport const fetchFilmsByQuery = async (query, page = 1) => {\n  const { data } = await axios.get(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}&page=${page}`\n  );\n\n  return data;\n};\n\nexport const requestMovieDetails = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}movie/${movieId}?api_key=${API_KEY}`\n  );\n\n  return data;\n};\n\nexport const requestMovieCast = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n\n  return data;\n};\n\nexport const requestMovieReviews = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n\n  return data;\n};\n"],"names":["Item","styled","StyledLink","Link","MovieTitle","Poster","MoviesItem","movie","location","useLocation","to","id","state","from","title","src","poster_path","alt","List","MoviesList","movies","map","Form","Input","Button","SearchForm","onSubmit","defaultValue","useState","query","setQuery","event","preventDefault","onChange","inputQuery","target","value","name","type","autoComplete","autoFocus","placeholder","required","setMovies","useSearchParams","searchParams","setSearchParams","isLoading","setIsLoading","searchQuery","get","useEffect","fetchFilmsByQuery","results","console","log","message","fetchMovies","searchValue","Loader","length","BASE_URL","API_KEY","getTrendingMovies","axios","data","page","requestMovieDetails","movieId","requestMovieCast","requestMovieReviews"],"sourceRoot":""}