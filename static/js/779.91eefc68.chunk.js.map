{"version":3,"file":"static/js/779.91eefc68.chunk.js","mappings":"qRAEaA,EAAcC,EAAAA,GAAAA,GAAH,uIAQXC,EAAcD,EAAAA,GAAAA,GAAH,kH,SC4CxB,EAhDgB,WACd,IAAQE,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwCE,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAoBA,OAlBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,WAAMR,GAAN,8EACxBM,GAAa,GADW,mBAGKG,EAAAA,EAAAA,IAAoBT,GAHzB,OAGhBG,EAHgB,OAItBC,EAAgBD,EAAaO,SAJP,gDAMtBC,QAAQC,IAAR,MANsB,yBAQtBN,GAAa,GARS,4EAAH,sDAYP,OAAZN,GAEJQ,EAAkBR,EACnB,GAAE,CAACA,KAGF,gCACGK,IAAa,SAACQ,EAAA,EAAD,IACbV,EAAaW,OAAS,GACrB,SAACjB,EAAD,UACGM,EAAaY,KAAI,SAAAC,GAChB,OACE,UAACjB,EAAD,YACE,0BACE,iCADF,IACgBiB,EAAGC,WAEnB,wBACE,uBAAID,EAAGE,cALOF,EAAGG,GASxB,OAGH,oEAIP,C","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ReviewsList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  /* flex-wrap: wrap; */\n  gap: 10px;\n  list-style-type: none;\n`;\n\nexport const ReviewsItem = styled.li`\n  border: 1px solid lightgrey;\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n`;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { requestMovieReviews } from 'services/api';\nimport Loader from 'components/Loader/Loader';\nimport { ReviewsItem, ReviewsList } from './Reviews.styled';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [movieReviews, setMovieReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchMovieReviews = async movieId => {\n      setIsLoading(true);\n      try {\n        const movieReviews = await requestMovieReviews(movieId);\n        setMovieReviews(movieReviews.results);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    if (movieId === null) return;\n\n    fetchMovieReviews(movieId);\n  }, [movieId]);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {movieReviews.length > 0 ? (\n        <ReviewsList>\n          {movieReviews.map(el => {\n            return (\n              <ReviewsItem key={el.id}>\n                <p>\n                  <b>Name:</b> {el.author}\n                </p>\n                <p>\n                  <i>{el.content}</i>\n                </p>\n              </ReviewsItem>\n            );\n          })}\n        </ReviewsList>\n      ) : (\n        <p>There are no reviews for this film yet</p>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n"],"names":["ReviewsList","styled","ReviewsItem","movieId","useParams","useState","movieReviews","setMovieReviews","isLoading","setIsLoading","useEffect","fetchMovieReviews","requestMovieReviews","results","console","log","Loader","length","map","el","author","content","id"],"sourceRoot":""}