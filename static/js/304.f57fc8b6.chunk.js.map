{"version":3,"file":"static/js/304.f57fc8b6.chunk.js","mappings":"uNAGaA,EAAOC,EAAAA,GAAAA,GAAH,oGAKJC,GAAaD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,kDAIVG,EAAaH,EAAAA,GAAAA,EAAH,6HAQVI,EAASJ,EAAAA,GAAAA,IAAH,8D,SCjBNK,EAAa,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACrBC,GAAWC,EAAAA,EAAAA,MAGjB,OACE,SAACT,EAAD,WACE,UAACE,EAAD,CAAYQ,GAAE,kBAAaH,EAAMI,IAAMC,MAAO,CAAEC,KAAML,GAAtD,WACE,SAACJ,EAAD,UAAaG,EAAMO,SACnB,SAACT,EAAD,CACEU,IACER,EAAMS,YAAN,0CACuCT,EAAMS,aACzC,8BAENC,IAAKV,EAAMO,YAKpB,ECpBYI,EAAOjB,EAAAA,GAAAA,GAAH,qGCCJkB,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC3B,OACE,SAACF,EAAD,UACGE,EAAOC,KAAI,SAAAd,GACV,OAAO,SAACD,EAAD,CAA2BC,MAAOA,GAAjBA,EAAMI,GAC/B,KAGN,C,0JCTYW,E,OAAQrB,GAAAA,GAAH,4F,SCuClB,EAnCa,WACX,OAA4CsB,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAmBA,OAjBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,2FAClBF,GAAa,GADK,mBAGKG,EAAAA,EAAAA,MAHL,OAGVV,EAHU,OAKhBK,EAAkBL,EAAOW,SALT,gDAOhBC,QAAQC,IAAR,MAPgB,yBAShBN,GAAa,GATG,4EAAH,qDAajBE,GACD,GAAE,KAGD,8BACGH,GACC,SAACQ,EAAA,EAAD,KAEA,iCACE,SAACZ,EAAD,+BACA,SAACH,EAAA,EAAD,CAAYC,OAAQI,QAK7B,C,+LCpCKW,EAAW,gCACXC,EAAU,mCAEHN,EAAiB,mCAAG,sGACRO,EAAAA,EAAAA,IAAA,UAClBF,EADkB,uCACqBC,IAFb,uBACvBE,EADuB,EACvBA,KADuB,kBAKxBA,GALwB,2CAAH,qDAQjBC,EAAiB,mCAAG,WAAOC,GAAP,8FAAcC,EAAd,+BAAqB,EAArB,SACRJ,EAAAA,EAAAA,IAAA,UAClBF,EADkB,gCACcC,EADd,kBAC+BI,EAD/B,iBAC6CC,IAFrC,uBACvBH,EADuB,EACvBA,KADuB,kBAKxBA,GALwB,2CAAH,sDAQjBI,EAAmB,mCAAG,WAAMC,GAAN,yFACVN,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iBACDQ,EADC,oBACkBP,IAFR,uBACzBE,EADyB,EACzBA,KADyB,kBAK1BA,GAL0B,2CAAH,sDAQnBM,EAAgB,mCAAG,WAAMD,GAAN,yFACPN,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iBACDQ,EADC,4BAC0BP,IAFnB,uBACtBE,EADsB,EACtBA,KADsB,kBAKvBA,GALuB,2CAAH,sDAQhBO,EAAmB,mCAAG,WAAMF,GAAN,yFACVN,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iBACDQ,EADC,4BAC0BP,IAFhB,uBACzBE,EADyB,EACzBA,KADyB,kBAK1BA,GAL0B,2CAAH,qD","sources":["components/MovieItem/MovieItem.styled.js","components/MovieItem/MovieItem.jsx","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","pages/Home/Home.styled.js","pages/Home/Home.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Item = styled.li`\n  width: calc((100% - 10px) / 3);\n  box-shadow: 0px 0px 13px 1px #a39b9c;\n`;\n\nexport const StyledLink = styled(Link)`\n  text-decoration: none;\n`;\n\nexport const MovieTitle = styled.p`\n  height: 40px;\n  margin-bottom: 5px;\n  text-align: center;\n  color: black;\n  font-weight: 700;\n`;\n\nexport const Poster = styled.img`\n  width: 100%;\n  object-fit: cover;\n`;\n","import { useLocation } from 'react-router-dom';\nimport { Item, MovieTitle, Poster, StyledLink } from './MovieItem.styled';\n\nexport const MoviesItem = ({ movie }) => {\n  const location = useLocation();\n  //   console.log(location);\n\n  return (\n    <Item>\n      <StyledLink to={`/movies/${movie.id}`} state={{ from: location }}>\n        <MovieTitle>{movie.title}</MovieTitle>\n        <Poster\n          src={\n            movie.poster_path\n              ? `https://image.tmdb.org/t/p/w200/${movie.poster_path}`\n              : 'http://placehold.it/200x300'\n          }\n          alt={movie.title}\n        />\n      </StyledLink>\n    </Item>\n  );\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 5px;\n  list-style-type: none;\n`;\n","import { MoviesItem } from 'components/MovieItem/MovieItem';\nimport { List } from './MoviesList.styled';\n\nexport const MoviesList = ({ movies }) => {\n  return (\n    <List>\n      {movies.map(movie => {\n        return <MoviesItem key={movie.id} movie={movie} />;\n      })}\n    </List>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Title = styled.h2`\n  margin-top: 20px;\n  margin-bottom: 20px;\n  text-align: center;\n`;\n","import { MoviesList } from 'components/MoviesList/MoviesList';\nimport { useState, useEffect } from 'react';\nimport { getTrendingMovies } from 'services/api';\nimport Loader from 'components/Loader/Loader';\nimport { Title } from './Home.styled';\n\nconst Home = () => {\n  const [trandingMovies, setTrandingMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      setIsLoading(true);\n      try {\n        const movies = await getTrendingMovies();\n        // console.log(movies.results);\n        setTrandingMovies(movies.results);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchMovies();\n  }, []);\n\n  return (\n    <>\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <>\n          <Title>Tranding movies</Title>\n          <MoviesList movies={trandingMovies} />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\n// axios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '77c88a9974e8e5cf721d75ac1e275e9a';\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(\n    `${BASE_URL}trending/movie/week?api_key=${API_KEY}`\n  );\n\n  return data;\n};\n\nexport const fetchFilmsByQuery = async (query, page = 1) => {\n  const { data } = await axios.get(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}&page=${page}`\n  );\n\n  return data;\n};\n\nexport const requestMovieDetails = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}movie/${movieId}?api_key=${API_KEY}`\n  );\n\n  return data;\n};\n\nexport const requestMovieCast = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n\n  return data;\n};\n\nexport const requestMovieReviews = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n\n  return data;\n};\n"],"names":["Item","styled","StyledLink","Link","MovieTitle","Poster","MoviesItem","movie","location","useLocation","to","id","state","from","title","src","poster_path","alt","List","MoviesList","movies","map","Title","useState","trandingMovies","setTrandingMovies","isLoading","setIsLoading","useEffect","fetchMovies","getTrendingMovies","results","console","log","Loader","BASE_URL","API_KEY","axios","data","fetchFilmsByQuery","query","page","requestMovieDetails","movieId","requestMovieCast","requestMovieReviews"],"sourceRoot":""}