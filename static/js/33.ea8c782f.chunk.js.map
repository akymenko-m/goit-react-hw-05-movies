{"version":3,"file":"static/js/33.ea8c782f.chunk.js","mappings":"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","sources":["pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx","services/api.js"],"sourcesContent":["import { Link, NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const MovieContainer = styled.div`\n  display: flex;\n  margin: 10px 0;\n`;\nexport const MovieData = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  padding-left: 10px;\n`;\n\nexport const AdditionalInfo = styled.div`\n  display: flex;\n  gap: 10px;\n  margin-bottom: 10px;\n`;\n\nexport const NavLinkStyled = styled(NavLink)`\n  color: darkblue;\n  text-decoration: none;\n\n  &:hover,\n  &:focus {\n    color: greenyellow;\n  }\n  &.active {\n    text-decoration: underline;\n    font-weight: 700;\n  }\n`;\n\nexport const GoBack = styled(Link)`\n  width: 100px;\n  height: 30px;\n  display: flex;\n  padding: 6px;\n  color: darkblue;\n  text-decoration: none;\n\n  &:hover,\n  &:focus {\n    border: 2px solid greenyellow;\n    border-radius: 10px;\n  }\n`;\n","import React, { useEffect, useState, lazy, Suspense } from 'react';\nimport { Route, Routes, useLocation, useParams } from 'react-router-dom';\nimport { requestMovieDetails } from 'services/api';\n// import { Cast } from 'components/Cast/Cast';\n// import { Reviews } from 'components/Reviews/Reviews';\nimport Loader from 'components/Loader/Loader';\nimport {\n  AdditionalInfo,\n  GoBack,\n  MovieContainer,\n  MovieData,\n  NavLinkStyled,\n} from './MovieDetails.styled';\n// import { StyledNavLink } from 'components/App.styled';\n\nconst LazyCast = lazy(() => import('components/Cast/Cast'));\nconst LazyReviews = lazy(() => import('components/Reviews/Reviews'));\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movieDetails, setMovieDetails] = useState(null);\n  const location = useLocation();\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchMovieDetails = async movieId => {\n      setIsLoading(true);\n      try {\n        const movieDetails = await requestMovieDetails(movieId);\n        // console.log(movieDetails);\n        setMovieDetails(movieDetails);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchMovieDetails(movieId);\n  }, [movieId]);\n\n  function getGenres() {\n    return movieDetails.genres.map(el => el.name).join(', ');\n  }\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {movieDetails && (\n        <div>\n          <GoBack to={location.state?.from ?? '/'}>‚Üê Go back</GoBack>\n          <MovieContainer>\n            <img\n              src={\n                movieDetails.poster_path\n                  ? `https://image.tmdb.org/t/p/w200/${movieDetails.poster_path}`\n                  : 'http://placehold.it/200x300'\n              }\n              alt=\"{movieDetails.title}\"\n            />\n            <MovieData>\n              <h3>\n                {movieDetails.title}\n                <span> ({Number.parseInt(movieDetails.release_date)})</span>\n              </h3>\n              <p>\n                <b>Overview:</b>\n              </p>\n              <p>{movieDetails.overview}</p>\n              <p>\n                <b>Genres:</b> {getGenres()}\n              </p>\n            </MovieData>\n          </MovieContainer>\n\n          <AdditionalInfo>\n            <NavLinkStyled\n              to=\"cast\"\n              state={{ from: location.state?.from ?? '/' }}\n            >\n              Cast\n            </NavLinkStyled>\n            <NavLinkStyled\n              to=\"reviews\"\n              state={{ from: location.state?.from ?? '/' }}\n            >\n              Reviews\n            </NavLinkStyled>\n          </AdditionalInfo>\n\n          <>\n            <Suspense fallback={<Loader />}>\n              <Routes>\n                <Route path=\"cast\" element={<LazyCast />} />\n                <Route path=\"reviews\" element={<LazyReviews />} />\n              </Routes>\n            </Suspense>\n          </>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\n// axios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '77c88a9974e8e5cf721d75ac1e275e9a';\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(\n    `${BASE_URL}trending/movie/week?api_key=${API_KEY}`\n  );\n\n  return data;\n};\n\nexport const fetchFilmsByQuery = async (query, page = 1) => {\n  const { data } = await axios.get(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}&page=${page}`\n  );\n\n  return data;\n};\n\nexport const requestMovieDetails = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}movie/${movieId}?api_key=${API_KEY}`\n  );\n\n  return data;\n};\n\nexport const requestMovieCast = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n\n  return data;\n};\n\nexport const requestMovieReviews = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n\n  return data;\n};\n"],"names":["MovieContainer","styled","MovieData","AdditionalInfo","NavLinkStyled","NavLink","GoBack","Link","LazyCast","lazy","LazyReviews","movieId","useParams","useState","movieDetails","setMovieDetails","location","useLocation","isLoading","setIsLoading","useEffect","fetchMovieDetails","requestMovieDetails","console","log","Loader","to","state","from","src","poster_path","alt","title","Number","parseInt","release_date","overview","genres","map","el","name","join","Suspense","fallback","path","element","BASE_URL","API_KEY","getTrendingMovies","axios","data","fetchFilmsByQuery","query","page","requestMovieCast","requestMovieReviews"],"sourceRoot":""}